# .github/workflows/daily_xiaoyun_broadcast.yml (v2.2 - 带有动态字体搜索)

name: Xiaoyun Daily Broadcast

on:
  schedule:
    - cron: '0 21 * * *'
  workflow_dispatch:

jobs:
  broadcast-daily-message:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      # 步驟 1: 安裝字體
      - name: Install Chinese Fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk
      
      # <<< 新增的核心步驟：動態查找字體路徑 >>>
      - name: Find Font Path and Set as Environment Variable
        id: find_font
        run: |
          # 使用 find 命令在 /usr/share/fonts 中搜索字體檔案
          # -name 指定檔案名，-print 打印路徑，-quit 找到第一個就退出
          FONT_PATH=$(find /usr/share/fonts -name "NotoSansCJK-Regular.otf" -print -quit)
          if [ -z "$FONT_PATH" ]; then
            echo "::error::Could not find NotoSansCJK-Regular.otf font file after installation."
            # 也可以在這裡搜索其他備用字體
            # FONT_PATH=$(find /usr/share/fonts -name "其他備用字體.ttf" -print -quit)
            exit 1
          fi
          echo "Found font at: $FONT_PATH"
          # 使用 GitHub 的特殊語法將這個路徑設置為後續步驟可以使用的輸出變數
          echo "font_path=$FONT_PATH" >> "$GITHUB_OUTPUT"
      # <<< 新增結束 >>>

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Xiaoyun's daily broadcast script
        env:
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
          PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
          IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
          # <<< 新增的環境變數：從上一步的輸出動態獲取字體路徑 >>>
          CALENDAR_FONT_PATH: ${{ steps.find_font.outputs.font_path }}
        run: python daily_broadcast.py
